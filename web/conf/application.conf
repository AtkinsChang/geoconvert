# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret="tbiz_QkItkGJkt_vSyjlgqlMXINrMS?193h9yZjLGH;5IEo^xQkVNywE7HMKiwcf"

play {
  modules.enabled += "actors.ActorInjectModule"

  cache {
    bindCaches = ["main-cache"]
  }
  i18n {
    # The application languages
    # ~~~~~
    langs = [ "en" ]
  }
  session {
    secure = true
  }
  flash {
    secure = true
  }
  netty {
    log.wire = true
  }
}

akka {
  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"

  # Filter of log events that is used by the LoggingAdapter before
  # publishing log events to the eventStream.
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 5s
  log-config-on-start = off
  log-dead-letters = on
  log-dead-letters-during-shutdown = on
  daemonic = off
  jvm-exit-on-fatal-error = on
  actor {
    provider = "akka.actor.LocalActorRefProvider"
    #provider = "akka.cluster.ClusterActorRefProvider"
    #provider = "akka.remote.RemoteActorRefProvider"
    guardian-supervisor-strategy = "akka.actor.DefaultSupervisorStrategy"
    creation-timeout = 20s
    reaper-interval = 5s
    serialize-messages = off
    serialize-creators = off
    unstarted-push-timeout = 10s
    typed {
      timeout = 5s
    }

    debug {
      # enable function of Actor.loggable(), which is to log any received message
      # at DEBUG level, see the “Testing Actor Systems” section of the Akka
      # Documentation at http://akka.io/docs
      receive = on

      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = on

      # enable DEBUG logging of actor lifecycle changes
      lifecycle = on

      # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
      fsm = on

      # enable DEBUG logging of subscription changes on the eventStream
      event-stream = on

      # enable DEBUG logging of unhandled messages
      unhandled = on

      # enable WARN logging of misconfigured routers
      router-misconfiguration = on
    }

    default-dispatcher {
      type = "Dispatcher"
      executor = "fork-join-executor"
      fork-join-executor {
        # Settings this to 1 instead of 3 seems to improve performance.
        parallelism-factor = 1.0
        parallelism-max = 1

        # Setting this to LIFO changes the fork-join-executor
        # to use a stack discipline for task scheduling. This usually
        # improves throughput at the cost of possibly increasing
        # latency and risking task starvation (which should be rare).
        task-peeking-mode = LIFO
      }
    }
  }
}

application {

  # Global object class
  # ~~~~~
  # Define the Global object class for this application.
  # Default to Global in the root package.
  # application.global=Global

  # Router
  # ~~~~~
  # Define the Router object to use for this application.
  # This router will be looked up first when the application is starting up,
  # so make sure this is the entry point.
  # Furthermore, it's assumed your route file is named properly.
  # So for an application router like `my.application.Router`,
  # you may need to define a router file `conf/my.application.routes`.
  # Default to Routes in the root package (and conf/routes)
  # application.router=my.application.Routes
}

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

assets.checkForMinified = true
java.source = 1.8
parsers.disk.maxLength = 1024000K